services:
  db:
    image: ${DB_IMAGE_TAG:-asia-southeast1-docker.pkg.dev/${GCP_PROJECT:-SLJ-Supply-Center}/slj-repo/db:latest}
    container_name: db-production
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env.production
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - erp-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${BACKEND_IMAGE_TAG:-erp-backend:latest}
    container_name: backend-production
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - erp-network
volumes:
  postgres-data:

networks:
  erp-network:
    driver: bridge
